create table "public"."change_request" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "proposal_id" bigint
);


alter table "public"."change_request" enable row level security;

CREATE UNIQUE INDEX change_request_pkey ON public.change_request USING btree (id);

alter table "public"."change_request" add constraint "change_request_pkey" PRIMARY KEY using index "change_request_pkey";

alter table "public"."change_request" add constraint "change_request_proposal_id_fkey" FOREIGN KEY (proposal_id) REFERENCES proposals(id) ON DELETE CASCADE not valid;

alter table "public"."change_request" validate constraint "change_request_proposal_id_fkey";

create policy "Change request public"
on "public"."change_request"
as permissive
for select
to public
using (true);


create policy "Delete Change Requests"
on "public"."change_request"
as permissive
for delete
to public
using ((is_admin(auth.uid()) OR is_signoff_user(auth.uid())));


create policy "Insert Change Request"
on "public"."change_request"
as permissive
for insert
to public
with check ((is_admin(auth.uid()) OR is_signoff_user(auth.uid())));


create policy "Update Change Request"
on "public"."change_request"
as permissive
for update
to public
using ((is_admin(auth.uid()) OR is_signoff_user(auth.uid())))
with check ((is_admin(auth.uid()) OR is_signoff_user(auth.uid())));



